mql5
/*
Program Name: Cipher B Divergences
Developer's Site: forexroboteasy.com
Development Name: Forex Robot Easy Team
*/

// Include necessary libraries and indicators
#include <Trade\Trade.mqh>
#include <Indicators\Trend\Stochastic\Stochastic.mqh>
#include <Indicators\Trend\MovingAverages\MovingAverages.mqh>

// Define global variables
input string currencyPair = 'EURUSD';
input ENUM_TIMEFRAMES timeframe = PERIOD_H1;

// Initialize objects
CTrade trade;
CStochastic stochastic;
CMovingAverages movingAverages;

// Define buffer arrays for plots
double plotBuffer[31];

// Define buffer arrays for indicators
double buffer1[97];

// Define initialization function
int OnInit()
{
   // Set up chart properties
   ChartSetInteger(0, CHART_SCALE, SCALE_LOG);
   ChartSetInteger(0, CHART_AUTOSCROLL, false);

   // Set up indicator properties
   stochastic.Init();
   movingAverages.Init();

   // Return initialization result
   return(INIT_SUCCEEDED);
}

// Define start function
void OnStart()
{
   // Get indicator values
   stochastic.Calculate(currencyPair, timeframe, buffer1);
   movingAverages.Calculate(currencyPair, timeframe, buffer1);

   // Calculate divergences
   for(int i = 0; i < 31; i++)
   {
      if(buffer1[i] > buffer1[i+1] && buffer1[i+1] < buffer1[i+2])
         plotBuffer[i] = buffer1[i+1];
      else if(buffer1[i] < buffer1[i+1] && buffer1[i+1] > buffer1[i+2])
         plotBuffer[i] = buffer1[i+1];
      else
         plotBuffer[i] = 0.0;
   }

   // Plot divergences on chart
   for(int i = 0; i < 31; i++)
   {
      if(plotBuffer[i] > 0.0)
         ChartIndicatorAdd(0, INDICATOR_LINE, plotBuffer[i], clrRed);
   }

   // Wait for user input to exit program
   while(!IsStopped())
   {
      Sleep(1000);
   }
}
